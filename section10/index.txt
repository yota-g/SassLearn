48.設定ファイルからGulp開発環境を作成する。
package,jsonがあれば、このファイルの中にある設定されているパッケージをまとめてインストールすることができる。
また、より実践的なgulpについても学ぶ。
まとめてインストールする方法は、package,jsonがあるディレクトリに行って、
npm installでインストールが始まって、package.jsonの中にあるものがインストールできる。
グループで共有や、以前行った環境でしたい時にはこれを行うとその環境で行うことができる。
使い回すことで何度でも同じ環境で開発することができる。

より実践的なgulpタスクについて見ていく。
最初に作成したgulpタスクはsassをビルドするというタスクしかなかったが、
新しいgulpfileには4つのパッケージを追加している。
gulp-watch 
　ファイルを監視して変更があった場合にビルドを行う。
gulpとの違いはgulpの場合は新規ファイルを作成した場合は、そのファイルは監視対象に入っていなかった。だから、gulpタスクを終了して再起動しないといけなかった。gulp-watchは新規作成したファイルも監視対象になるのでいちいち終了しなくていい。

gulp-notify
　タスクの終了時やエラーの発生時が発生した場合にデスクトップに通知を表示するもの。
通常ターミナル、コマンドプロンプトは作業ウィンドウの裏側に至り最小化したりして、常に見えている状態ではない。だから、タスクの終了、エラーがわかりづらいのでこの通知があるとsassの’ビルドのタイミングなどがわかり非常に便利。

gulp-plumber
　エラーが発生してもタスクを終了しないようにするというパッケージ。
sassでタスクでビルドエラーが出る度に、タスクが終了していた。
その度にgulpのタスクの起動をしなければならなくなっていた。
その手間をなくした。エラーが発生しても実行され続ける。

browser-sync
 　ローカルサーバーを立ち上げて、ファイルに変化があった場合に自動でブラウザをリロードするというプラグイン。
 これを使用するとファイルを編集して、保存した後に毎回ブラウザをリロードするという手間がいらなくなるので作業効率が向上。
 gulpタスクを実行する。