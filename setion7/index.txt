制御ディレクティブ
36,条件分岐
sassではif文を使用する事ができる。
〜だったら~という処理をするという事。
if分の処理は上から順に判断されて処理が行われていく。
lecture36.scssに記入してある。
条件に満たされればその行のものが適用される。


等しいというものでない演算子でも使用する事ができる例も指名している。
また、複数の条件を組み合わせる論理演算子も使用できる。
 jsとの条件分岐の複数条件の書き方が異なるので注意
&&と||ではなく、andとorを使用する。

37.繰り返し処理
繰り返し処理は同じ処理を何度も使用したい時に使用する。
 for、each、while文があるので学習していく。
例では余白調整用の管理での使用等がある。

forは開始と終了の数値を指定し、開始の数値から１ずつインクリメントしていって終値まで処理を行っていく。
2つの方法がある。
@for $i form 開始値 thoroughまたはto 終値{繰り返し行う処理の記入}という形。

throughは終値まで含めるが、
toの場合は終値-1の値までしか反映しない。終値を含めない。

繰り返し処理で１ずつではなく10ずつ増やしたい場合は、繰り返し処理の中で変数を定義して増やす値を定義して使用する。
@for $h from 1 through 3 {
  $index: $h * 10;
  .mt2#{$index} {
    margin-top: $index * 10;
  }
}
こうする事で10ずつ値を増やした値を出力する事ができる。

while分
$i: 0;
@while ($i < 30) {
  .pb#{$i} {
    padding-bottom: $i * 10;
  }
  $i: $i + 10;

}
for分のように自動でインクリメントされないので構文の中でインクリメント処理を書かないといけない。　


each分：配列の要素に対して、繰り返しを行う。
配列の個数分だけ処理を行う。
@each　$value in 配列を格納している変数 {}という形で行う。
配列に記載された分だけ繰り返し処理がされている事が確認distribute
配列の記載方法は、,で区切るだけで配列になる。

